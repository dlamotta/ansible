---
- fail:
    msg: "{{ infoblox_host.json[0].ipv4addrs[0].host }} already has an IP assigned in Infoblox: {{ infoblox_host.json[0].ipv4addrs[0].ipv4addr }}"    
  when: infoblox_host.json|length > 0

- fail:
    msg: "IP address not specified!"
  when: (cfme_instance.json.ipaddresses is undefined)

- name: get network reference from infoblox
  uri:
    url: "{{ infoblox_endpoint }}network?network_view=default&network={{ infoblox_cidr }}&_return_fields=network_view,network,netmask,ipv4addr,extattrs,comment,options"
    user: "{{ infoblox_user }}"   
    password: "{{ infoblox_pass }}"
    force_basic_auth: true
    validate_certs: False
    method: GET
    body_format: json
    status_code: 200
  register: infoblox_response
  delegate_to: "{{ control_machine }}"

- debug:
    msg: "Network reference id: {{ infoblox_response.json[0]._ref | regex_replace('network/') }}"

- debug:
    msg: "Provided IP address to register: {{ item }}"
  with_items: "{{ cfme_instance.json.ipaddresses|ipaddr(infoblox_cidr) }}"    

- name: assign ip address in Infoblox
  uri:
    url: "{{ infoblox_endpoint }}record:host/{{ infoblox_response.json[0]._ref | regex_replace('network/') }}:{{ cfme_instance.json.name }}.{{ infoblox_domain }}/%20"
    user: "{{ infoblox_user }}"   
    password: "{{ infoblox_pass }}"
    force_basic_auth: true
    validate_certs: False
    method: POST
    body_format: json
    body:
      {
        "comment": "IP assigned by Ansible on {{ ansible_date_time.weekday }}, {{ ansible_date_time.date }} at {{ ansible_date_time.time }}",
        "name": "{{ cfme_instance.json.name }}.{{ infoblox_domain }}",
        "configure_for_dns": false,
        "ipv4addrs": [
          {
            "ipv4addr": "{{ item }}",
            "configure_for_dhcp": false
          }
        ]
      }
    status_code: 201
  register: infoblox_response
  with_items: "{{ cfme_instance.json.ipaddresses|ipaddr(infoblox_cidr) }}"
  delegate_to: "{{ control_machine }}"

- debug:
    msg: "Infoblox response: {{ infoblox_response }}"



